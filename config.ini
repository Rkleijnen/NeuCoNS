[Sim Settings]
# Ignore links and nodes without traffic during read-out
ignore unused = True
plot heatmaps = True

# Select loop variable, leave empty when not desired
# Set loop variable values seperated by ','
loop variable =
loop values = 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32

[Neural Network]
# Generate a NN either as:
# 	- one of the predefined testcases and science cases [netlist]
#	- from a given connectivity matrix between clusters/populations [matrix]
NN generation = netlist				

# The argument dictionary should contain all arguments needed to generate the specified NN type, including an entry for the type of testcase/sciencecase/HW-distribution.
# See documentation for netlist types and their corresponding input arguments
testcase arguments = {
		"testcase_type": "cm_benchmark",
		"N": "0.05",
		"K": "0.2"
	}

Connectivity matrix file = matrix_files/Multi_Area.txt
FR defined = false

[Communication Protocol]
# Set routing scheme(s), list input seperated by ',' possible
# Options: dor, ldfr, dijkstra, espr, ner, (directionor, ldirectionfr <= Multi-Mesh options only)
routing = dor, ldfr
# Set casting scheme(s), list input seperated by ',' possible
# Options: uc, local_mc, mc, bc, bcf-uc, bcf-mc
casting = mc

[Neuron Mapping]
# Set mapping algorithm(s), list input seperated by ',' possible
# Options for connectivity matrix analysis: random, sequential, area_grouping
algorithm = PACMAN, MANUAL

neurons per node = 1600
mapping parameters = {
	"Temperature": "800",
	"reduction_factor": "0.5",
	"iterations": "500",
	"mincut_option": ""
	}

[Network Topology]
# List input seperated by ',' possible: 
# Mesh4, Mesh6, Mesh8, Combinational[8-gridsizes][6-gridsizes][4-gridsizes], Mesh3D, SpiNNaker, TrueNorth, BrainScaleS
topology = SpiNNaker
# List input possible: False, True
torus = True

# Set delay values for components, in case of the link delay, this is the normalized delay per link length
t_link = 0
t_router = 1

