[Sim Settings]
# Ignore links and nodes without traffic during read-out
ignore unused = True
plot heatmaps = True

# Select loop variable, leave empty when not desired
# Set loop variable values seperated by ','
loop variable = NpN
loop values = 100, 250, 500, 1000

[Neural Network]
# Generate a NN either as:
# 	- one of the predefined testcases and science cases [netlist]
#	- from a given connectivity matrix between clusters/populations [matrix]
NN generation = matrix

# The argument dictionary should contain all arguments needed to generate the specified NN type, including an entry for the type of testcase/sciencecase/HW-distribution.
# See documentation for netlist types and their corresponding input arguments
testcase arguments = {
	"testcase_type": "cm_benchmark",
	"N": "0.05",
	"K": "0.2"
	}

Connectivity matrix file = matrix_files/Cortical_Microcircuit.txt

[Communication Protocol]
# Set routing scheme(s), list input seperated by ',' possible
# Options: dor, ldfr, dijkstra, espr, ner, (directionor, ldirectionfr <= Multi-Mesh options only)
routing = ldfr
# Set casting scheme(s), list input seperated by ',' possible
# Options: uc, local_mc, mc, bc, bcf-uc, bcf-mc
casting = mc

[Neuron Mapping]
# Set mapping algorithm(s), list input seperated by ',' possible
# Options for connectivity matrix analysis: random, sequential, area_grouping, space_filling_curve
algorithm = area_grouping

neurons per node = 1000
neuron_model = population
# Set the possible types of different neuron models per node:
# population = only neurons from the same population allowed per node
# area = only neurons from the same area allowed per node
# else all different types of neurons can be mapped to the same node

mapping parameters = {
	"sort": "False"
	}

[Network Topology]
topology = Mesh
topology parameters= {
	"torus": "False",
	"degree": "4",
	"interconnect_top": "Mesh4",
	"layers": "8"
	}

[Timing]
# Set delay values for components, in case of the link delay, this is the normalized delay per link length
link delay = 0
router delay = 1

